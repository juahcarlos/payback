# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: tests.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase
import grpclib


@dataclass(eq=False, repr=False)
class EndpointRequest(betterproto.Message):
    test: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class EndpointResponse(betterproto.Message):
    test_res: str = betterproto.string_field(1)


class TestStub(betterproto.ServiceStub):
    async def test(self, *, test: str = "") -> "EndpointResponse":

        request = EndpointRequest()
        request.test = test

        return await self._unary_unary("/Test/test", request, EndpointResponse)


class TestBase(ServiceBase):
    async def test(self, test: str) -> "EndpointResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_test(self, stream: grpclib.server.Stream) -> None:
        request = await stream.recv_message()

        request_kwargs = {
            "test": request.test,
        }

        response = await self.test(**request_kwargs)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/Test/test": grpclib.const.Handler(
                self.__rpc_test,
                grpclib.const.Cardinality.UNARY_UNARY,
                EndpointRequest,
                EndpointResponse,
            ),
        }
